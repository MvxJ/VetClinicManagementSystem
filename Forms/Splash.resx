<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="SplashTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5gQHEBw4ts2K9QAAFOBJREFU
        eF7tnQnYfGVZh3EBV8Q1FRRRcMENFQQ3RJFLc0tFSyWjEhE1F0LR5FJwAzMXRNEkwkTJFBWXslzKNK0w
        zcvUENTCLCgtrbSyxaL7PvN88515vjPzzcxZ52Pu6/pd/+9/nnc7M++c8y7P+767rFmzZs2aNWvWrFlz
        peWKK664HjoIPQodi16EzkDnodehZ6J7oatElDWrCF/gruie6BfQ2eiT6B/QvPwVOgVdN5Jcswh8cPug
        R6Ano19EL0GvQC9AT0NHo0ei26FdI9rSkMa10cPQ6ehP0A9RE/wdelxkMxXCXAvdAT0Y/Tw6Hnmvr0Te
        u5+Bn8XD0T4RbefATd0RvRD5S/sXtAj/jS5BH0DPQweiq0XSUyHMbdAJ6GOoqS98Gi+JbM33asjXxIno
        Xejr6P/QIvwz8rP6JbR/JL1aUPDro+ejr6Gm8QOyQvw0unZkWcD/H4g+iv4XLct/IX/dn0O/g85Fn0bf
        R9N4B3on+qfif83iD8DKv0fc5nChkDdHb0A/QF3gl/Ib6Aj0RrTIr824n0DGsz1gGreMW9kCtt2Qle6L
        qA8sr43Sm0WRhgOF8sPxFz/rV1LmR+hv0VfQZ9Afos8ja7vX6/yCp/HXyEbfMejOaNtXSRXEsxHp+3vR
        Mhr+cvQF5NPl48h79zPwieNnMg//inwi7BZF6hcKYovaL24W/47eh45DB6OJR3cG+zWQbQe7ZHbHfg95
        44vwn+h30XPQ7SPpxiBNG2/T+A56L/JHYQP0VujqEbUS7DZWD0E2hC9AfmazuBgdFNG7h8yvgvwQfGdO
        41PosehaEW1pSMMGlo1Aewyz2hb+0n4F3TyitgZ5vNkME37xtccKSMMK8ZPI9sc0/Oyt4N2OTZChXRtr
        6TT85R0SwVuB9I8scprEFv9jIkjrkNd1kK+WMv+D7hBBGoH07Fn4FJyGle6aEbxdyMgW/h+ZawV+GI+K
        oK1BHj59/sAME0+LIJ1BnjYeM+8Jc6OQ7qPRN4sctmLXsd2eAhncBE1rBdsan/lubwryeXqR4yQfQb0M
        05Lvbxcl2MTX0O3C3Cik61Pn7WZSgQ3MG0fQZiFhM/4zc0n42H1yBGsd8nIkMXczHWCa2oVrG/K+E8qt
        +LeEuRVI3/mKqkGuC1GzP0QStAHm4EvGL+KICNY65OWj34GeTGcVcBqU4fxRUcb8G2p1voD0D0NVvaMP
        o5m9joUgMQdLMo56ddoNIb+qR7+No95n6CiDDbXMz4W5NcjDruN3i9wmeUMEqQcJ2Y3L2Ec9OIJ0Avnt
        iwb16M9QFgd4ynw8TK1CPvdG/1HkOEm9HhEJ+L517L2MDZzOulpCfjdFf2nmid4f/WUojzN9ZZzMun6Y
        W4V8/KHm0UmfDHtHkMUgou9bh2gzJ0WQ1iEvy2DX52/MONHoo5+0ro4chXMQ6YC4vBDEuxnKX8Ljw9w6
        5OWoaWa5pxARnfjI2Pe+agRpBdL31+4I2JloWp/3W+imEaURSO/VRcojbMAt9cshXn4NtNobKENeNtYd
        D8gsVgmJoHuUExdlbPTtFUEagzT91TweOax6EdqOf0R3j+iNQZo576PDtBDEc6KozJfC1Anktzf6XpHz
        Jk42zd8jIXC+CTk2zLUgnT3RE9Fb0FfRItgO2C+SahTS1dWrzFPDtBDEe+go+hhfCdcJcyeQ3zOKnCd5
        eZhnQ8AboTyt++do6Uc/cW3B65K13azhNP4ePRe1NgVK2k1VACt45sAwdwL5+SrII7b2mG4QQaZDoJcV
        wSe5b5gXhrgPQb5TF8FfzV8gHSCMv9Tc/SKQRyMVQIjrdHCZJ4WpM8jTQaLMKWGuhgC++7Pf3tJ9WeLu
        gfKHsR36D94okugM8myyAuQh8856TmXIN/fi7BZObwtgfGoRbJLDw7wwxPVdX4Xj5raWX1P8b5LOhpbL
        kG+TFSAPm58Rpk4hXz2RM9PHTjD+6SjMmM+GaSmIr9tzGb1kdQkfT1sWVyfZCRXg10ZJjHlnmDqHvG2/
        lflMmCbBoO965pgwLwXxXz5KZsynwjQmrpfZCRUgz51cEKbOIW8HtzJb3c25eOrINsbx/uuFeSmIf1KR
        0iYXhmlMXC+zEyrAa0dJjPlwmDqHvHXgyfMEW7uEXMzdhvPCtDSkkdsUvvsdpCgrc6+I3ink22QFsMtb
        5qNh6gXy/61RMcZ8IUwjuHALlH3qjwzz0pCGS7wWwfGH2g6ky0C+TVaAt46SGNN3BXBovYzf9Z5hLgLk
        X6qzWLX9y0jj1kVq83NiRO0c8m6yAmSfyXPD1Avk72tAZ9Uym+07/vObo2tjtjTWloF0nM2bx5/fd5Tt
        hd4cO8i7kQpAvGui7NP/wjD3BmXI7uVvD1NhzEO0J4epNqSle1IZV8L4SNqQI32dzJnPgjI0VQF+ahR9
        gl7aNWUow0tHRRlz0YbB0br8/n94YWwA0tJ5sYyLGW4Y5sFAmWpXAOK4bMwh7DKm2+oU+jxQhtwec7h9
        dw2uqM00tgCRtJzfzx6z4yXVQ4Ey5eHbF4dpbohT5Tt5fJh7hXJUTVIdpiE7Wl4WcRqDNLPfvO2Cwfjy
        CeVxiXcZdw25U5hnQrgbotyOEkc+rxHBeoeyOKta5jgv/vLo7zGfjPCNQZr3HyU9gZs3tD7LNy+UxR06
        Mj65XN+or5+LWov1hvx7A3RbdBR6G8p+k2JPqtXlcYtCeXLv5DQvurFBmc3WYYOQ7gdHyU+gF1DvLt1i
        OZBbyDSB79elPIrahDK54VWZ87z4x6O/x7wiwjcK6bpEumqLGAdNBvGYpBw/huruamKX9qhIclBQrtOK
        Em7yaS/mG35GhG8c0raLVLWLh2va7hHBeoVy+Hh3l5M8cDIvz4mkBgdlcyeUMhd7UYfBMq0+ukjfTROq
        8LH5bvQApKNop350GfL3aeAIqUvdv42mkSvKqZHE4KBsPzsq4phveTFPyGy79VldyMNGlV/4dhjG8uke
        7nYqbth0MtJl3aVYnaxGFvK6MXKDCmXX2elzR/1yG+rdEWVwULY8J/BdL+YVpo0NAs2CfH4c5W7Jovjr
        0+HhTehnUCsew7MgzzzCNjnTNiAoW+7p/NCLeZDmIRG+dcjLX5ULQOwyNYVtGhd5HIq6cCa14pX5fpgG
        B2XzR1fmR17MLuCPjvCdQZ5u7PgqNOtduwwuInH9QeMLWjYg7apVwY2uWmoKypXnKX7gxbxPbm9dGPJ2
        fZ7dxXsgf8HWWN9btl51IHWnMXsMVQMvs/Ae941sGoV0XUeRcSOrIc535HmZb3sxb3L0lAg/aCinK5et
        0VYMR7i2W3vQmlMGaeeJJLFt5VYud4lgvUNZ3F+wzKVedHq2zCAmLxaFcru3oG7Q9uGrvhB7FK1MO5Ou
        mz9PwzaWXsK9vxYoQ17082Uv/v7o7zGvjvArDffxpNHtTHCrMDcK6frqcgxjFk6AdbZUvAryP6soySYf
        82L2Xzs/wq803IfthTKOJzS3b06CtJ1LcGGoA0ezxjh+FXWzp1+CfN2etsw5XsyLN7a4bq8a3IO7duUv
        4fVhbh3ycqbQsYlp3VvX8Hd+4AR55lfjS73oYQVlLo/wKwv3kEfn9ELq3P+APN3vOP/qNnBks9a6i0Ug
        L19TuUI+RcPho7/HOFkzuC7MvFD2vVAenz8rzJ1D3r4abCRWTS5ZCTpxgyefKg/twiPI0bjMgyLeykHZ
        8yvNVvitw9wblMEfWtU5Ci4k7WLE0p3Xy/hDH/WK+CNvwvS8wrBiUG43Rsizmx8Mc+9QlvuhqjMVTosg
        rUEeDk6VuTRMhfH9o2tjelvNWgfKXeXg2tncxjxQHqe7PcugjL/GR0SQViD9vMPqB8JUGF88ujbmG2Fa
        KSh3XpZ9GerdJTtDmdwUKzvGuHnD5nKtBiFd2yF52n9ztxD+kzc2kt7fm4tAea+K8mTSa8M8OCib+xFm
        PhTmRiHd24+Sn+ABYS4CuBN4fiwdF+aVgPLqqJG5T5gHB2WzW1Z1Gkjj+wmRpqeeltFvcdIPkwv5AIb3
        hWkloLzuLVTGR+pg3M6roHzu6ZcdZS13oyeDkV5enrd13ycuZl89p1xbGzptGsqab3IlhrQpZ/bTk/eH
        uTak5fE+2y9W5eLdRrYJetmtY1Eop40cfzllnh3mwUNZq85ieGKYa0E62QtItu60ykU/RFvNZd4a5kFD
        OfcbFXeCe4Z58FBWD9zMTi56M9U+/oU09Igq87UwbQVj3tvG91MvM1eLQBnzyleHXQezJm8eKG/VZk5v
        DvNSEF+v5dz9m77wB6OuWJnHhnmwUMbcfrkkTCsDZbYb69xAGYexl/YoIm52A5fZ6REgewhtjhgNFMqY
        H3Ot9KfbhnJ7pG2eNFralY24eVX2V8M0HQLl7pS1cNDn2lO+vPC01qOzTyi7Lm2ZhddqEMfVVbkyvSDM
        0yGQfdO8VmCwI2pC+Wpv7jAUKLtrE20AlnFb/V0jyFwQPvv/6aQ6X6OSgO8pomxiY3D3MA8OypYXuD49
        TCuJ5R/dxgRzd2sJ67nDuRLNv1MZgT2FKjPkVa8eOV+m9ePa2oTyO639peJONnGcYy5HHcJVHRix2GYV
        RMibJVyKhnFmfYJy5dr+hDCtLNxD1Y4lp4d5KoSx8nyjCL3J58I8P0SqOi/wWWEeFJTLQ6TKDOo4uWXh
        Ptyepozv8VuEuRLsRxchJ1l8uR+RrEluclTG6dbBtQUo05eL0m3y3DCtNNyH6w6z38DUHg42B36yd5er
        p5fbhoeIVQc+zD52pAcoU55WfWWYVh7uJa9v0MO5coEL16s233hkmBeHyM4PfL5IZhN92m4SQQYB5clb
        vPW2P3/TcC93QfkpcHaYx3DNRap5PsFTWeptwkUCDyqSmuScMA8CypNd2kbboO4QuJ+qp8DEOgf+70KU
        TDP+kCTkMa1lrJEPDHPvUJa87t0RsMGOWywK93IAyk+BcY+Av/U2ziuhmvOGJjELkEcHHXzpZW//DOVw
        T4HMQ8O8I+B+sue2y+Fd02HD72IvlNDlq1mfThKsOuGrdX/2eaEsufX7qjDtCLifKp9H9yfKe/9J8w11
        EnV4MQ8wuNbsbhGkVyhHbgh+PUw7Bu4p+206RJ8nfFwA2s6TmYRd3pTfRT5+Ol/pmqEMVQNXB4d5R8D9
        PGx0W1Pxu3lwBG8HMsiLL6T2AVN1oQw6P+a1d2eGeUfA/dgtz/4aZdo/oJJMPH8mT75IrTMGm4Ay5M2Q
        bShtf2DyCsH95OX8G3iyejeNcjKy25HfPbY8e90QifyrZjF7P6+nSbifqnt0XKDbthgZ5h2nxK5h5wc/
        lyH/zxYl2WTuadSmId/dkCN5tp0eh9zE6hC01IlsxPN4v+y5Ld2ftkamvo+q/Nl1bOzNk5i8/aAz206j
        NgV53RXpjeMkzKwdUN2ez/2C5lp7QbjdUT7cUy5A/Zy5QMa2B3LXUM5HvazKJV8rZn4K+EUcEEFagfQd
        Ms/dtHl5UyRTCXZnZvPKJ9FppN8eGAW4O8pLj+Q1EaRzyNs1+BlP82rcoYU0PRTrXWZQA4dxK/cL4roV
        +tcNlNAJZhgruCmIR8LnRqH05kZG3rlHII1WStLTjTuPQE7DQZs8nL6BX2al0yfXq7yEfaINZi6mgAId
        g/Igkf/vxYuIfJ0erdqOvpHl16RzH5RX9m5g99NtYp2kciPs8Tuavz2IwsMyX4d8hDtle3iYJ+C6G2hn
        /EyXPta2VShYnpYVC3xCBOkU8v2JyL+MblUHRpClIL77EObFqGJX2E2qao89kMYpJljB8yPIMKGAtmyr
        6KXg5HvqKPsJ6qy28YzAqse+vvu3jWBLQxq+8/NRfhtsPfd/aFBIW6z5vPoNTopgnUGerrlz+9Yy01fI
        bgNxs3OGXIhqjzWQhp/d2SZYQWc7ndaGwnojeQ/iDfRc6XTjCfLLx+MvVQGI94RR9AmcDGtiGbe7nb/X
        BCuwF9BPX39ZLDCqOktX3LJsqdGwZSCv2hWAOH5BlxaxN7H7u38EWRrS8LUybQzhDDS4nc7mhsJPe585
        eXGbCNYq5NNEBXjWKOoEzwzz0pDG/ii734uN185fma3AjbyouKWt2P+9XwRrDfKoVQEI79PMRl6Zi1Ct
        TaiI7/x+VVfS8YJjI9jOgBtyM6R8RJ04k3Uiau0xR9p1K0DVyOLShz8Q1wrlBtJVA0N+Ro+JoDsLbsyZ
        sKrZLHFb9eJ07qYh3boVwEGbMg4wLbRcewPiOXT8EROpwH2O7x1Bdybc4J4oT9Zs8B3U+J65pFm3Avi4
        L/PGMC0E8ZwOzqe0beA6wEEeN9c43KiuzA6VVmHjx/HvxqaUSWvpCkDYPUZRJliokhJedzUPs8yjkhuc
        jlZmT8bG4KZtWTt8WoUt40ZWtpBOnQpQ62BIwt4f5Q0sNnDOYOWXsteCD8BjVXSemIZTrbV20SZ+nQqQ
        Tx/7XphmQjifHG5eNe1X77Y2tccQdgR8ELsiDzSYNl3qkWvPRkt1u4hXpwLk/ftmbkGH3Rb+USgfXLGB
        vR67xVe+R/528KE4xVrlYbSBT4pDI/jcEKdOBThhFGXMF8O0BWyW33mBaeiU0qpn0srDB3Rd5BDytKeB
        2I06KKJsC2HrVIA8AviVMI3hmgcy+aqa9rjXWcYn3CC32BkkfFguSM1bpJTxw9Yh8s4RZSqEqVMB8pYr
        l4VJ277oHDTL+fMT6K4RZc0i8MH5PnUGrmohygb60+n+tV9E2wK2OhVA750yVjwXap6LqtzgNtDr98hI
        Zk0d+CA90cRHaNVQ8gZWBJdQb/GV41qdCuDI3SK4PO0kNPhNtlcOPlT967b75Yn+8y6hKr4E/q1TATza
        JW9DV4Vl0geilYOf1pTgQ57n3SsOLfvkyIdJblsBCOOmE8a93AgzsFunF08nU9trSvCh74McbPFLWITK
        CsB1nT6ORNudAC4esqV3094RfU1f8CXcEp2Jpg0rZ3wy3BfZyNRn8DDkrzjvslWFebwerR/1Q4MvxZ22
        j0d59m4a30R5l9FpXIIcFFrZg7WvVPBF2VU7C837VKjC14B+Ch5Js1pOmWtG8MW5Ekfvm1lDzBl/7Sej
        vSKZNasOX6bv+kORbYV8xKzY2tfzZ+4h5jUrCl+y6xaOQDqeWCH8e9CnjK5Zs2bNmjVr1qxZ0xC77PL/
        BZVp5MWM/PQAAAAASUVORK5CYII=
</value>
  </data>
</root>